{
	"name": "df_pred_presc01",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_abs",
						"type": "DatasetReference"
					},
					"name": "sourceabs"
				},
				{
					"dataset": {
						"referenceName": "ds_evs",
						"type": "DatasetReference"
					},
					"name": "sourceevs"
				},
				{
					"dataset": {
						"referenceName": "ds_ipe",
						"type": "DatasetReference"
					},
					"name": "sourceipe"
				},
				{
					"dataset": {
						"referenceName": "ds_leaves",
						"type": "DatasetReference"
					},
					"name": "sourceleaves"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_table",
						"type": "DatasetReference"
					},
					"name": "sourcesqlHistsnapshot",
					"description": "Import data from ds_azure_table [datatransformation].[HistoricalSnapshot]"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_table",
						"type": "DatasetReference"
					},
					"name": "sourcesqlperfreview"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_table",
						"type": "DatasetReference"
					},
					"name": "sourcesqlrptsucession"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_table",
						"type": "DatasetReference"
					},
					"name": "sourcesqldevplancore"
				},
				{
					"name": "sourcesqldev"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_table",
						"type": "DatasetReference"
					},
					"name": "sourcesqlrpttranscript",
					"description": "[reporting].[vw_rpt_transcript] "
				},
				{
					"dataset": {
						"referenceName": "ds_azure_table",
						"type": "DatasetReference"
					},
					"name": "sourcesqlrptusercf",
					"description": "[reporting].[vw_rpt_user_cf]"
				},
				{
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_azure_table",
						"type": "DatasetReference"
					},
					"name": "sourcesqlsurveyresponse",
					"description": "dbo.survey_response"
				}
			],
			"sinks": [],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          {User First Name} as string,",
				"          {User Last Name} as string,",
				"          {User ID} as string,",
				"          {Local system ID} as string,",
				"          Type as string,",
				"          Status as string,",
				"          {Date changed} as string,",
				"          {Date effective} as string,",
				"          {Field modified} as string,",
				"          {Field type} as string,",
				"          {Field changed from} as string,",
				"          {Field changed to} as string,",
				"          {Field changed by} as string,",
				"          {Reason for change} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceabs",
				"source(output(",
				"          ID as string,",
				"          Respondents as short,",
				"          ResponseRate as short,",
				"          Culture as short,",
				"          {Culture  %Favorable} as short,",
				"          {Trust - Team} as short,",
				"          {Trust - Team  %Favorable} as short,",
				"          {Role Clarity Functional} as string,",
				"          {Role Clarity Functional  %Favorable} as string,",
				"          {Growth Functional} as string,",
				"          {Growth Functional  %Favorable} as string,",
				"          Career as short,",
				"          {Career  %Favorable} as short,",
				"          {Continuous Improvement Functional} as string,",
				"          {Continuous Improvement Functional  %Favorable} as string,",
				"          {Communication - Manager} as short,",
				"          {Communication - Manager  %Favorable} as short,",
				"          Support as short,",
				"          {Support  %Favorable} as short,",
				"          {Equal Opportunity} as short,",
				"          {Equal Opportunity  %Favorable} as short,",
				"          {Distress - Well-being} as short,",
				"          {Distress - Well-being  %Favorable} as short,",
				"          {Ethics Helpline} as short,",
				"          {Ethics Helpline  %Favorable} as short,",
				"          {Work Life Balance} as short,",
				"          {Work Life Balance  %Favorable} as short,",
				"          Growth as short,",
				"          {Growth  %Favorable} as short,",
				"          Cooperation as short,",
				"          {Cooperation  %Favorable} as short,",
				"          Initiative as short,",
				"          {Initiative  %Favorable} as short,",
				"          {Decision Making} as short,",
				"          {Decision Making  %Favorable} as short,",
				"          {Engagement Index} as short,",
				"          {Engagement Index  %Favorable} as short,",
				"          {Engagement Index > Recommend} as short,",
				"          {Engagement Index > Recommend  %Favorable} as short,",
				"          {Role Clarity} as short,",
				"          {Role Clarity  %Favorable} as short,",
				"          Resources as short,",
				"          {Resources  %Favorable} as short,",
				"          {Engagement Index > eSat} as short,",
				"          {Engagement Index > eSat  %Favorable} as short,",
				"          Belonging as short,",
				"          {Belonging  %Favorable} as short,",
				"          Prospects as short,",
				"          {Prospects  %Favorable} as short,",
				"          {Purpose Contribution} as short,",
				"          {Purpose Contribution  %Favorable} as short,",
				"          {Inclusion - Team} as short,",
				"          {Inclusion - Team  %Favorable} as short,",
				"          {Job Feedback} as short,",
				"          {Job Feedback  %Favorable} as short,",
				"          {Consumer Focus - Culture} as short,",
				"          {Consumer Focus - Culture  %Favorable} as short,",
				"          {Non-Discrimination} as short,",
				"          {Non-Discrimination  %Favorable} as short,",
				"          {Code of Conduct} as short,",
				"          {Code of Conduct  %Favorable} as short,",
				"          {Health & Safety} as short,",
				"          {Health & Safety  %Favorable} as short,",
				"          {Continuous Improvement} as short,",
				"          {Continuous Improvement  %Favorable} as short,",
				"          Empowerment as short,",
				"          {Empowerment  %Favorable} as short,",
				"          Environment as short,",
				"          {Environment  %Favorable} as short,",
				"          Purpose as short,",
				"          {Purpose  %Favorable} as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceevs",
				"source(output(",
				"          {User First Name} as string,",
				"          {User Last Name} as string,",
				"          {User ID} as string,",
				"          {Local system ID} as string,",
				"          Type as string,",
				"          Status as string,",
				"          {Date changed} as string,",
				"          {Date effective} as string,",
				"          {Field modified} as string,",
				"          {Field type} as string,",
				"          {Field changed from} as string,",
				"          {Field changed to} as string,",
				"          {Field changed by} as string,",
				"          {Reason for change} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceipe",
				"source(output(",
				"          ID as string,",
				"          Respondents as string,",
				"          ResponseRate as string,",
				"          Culture as string,",
				"          {Culture  %Favorable} as string,",
				"          {Trust - Team} as string,",
				"          {Trust - Team  %Favorable} as string,",
				"          {Role Clarity Functional} as string,",
				"          {Role Clarity Functional  %Favorable} as string,",
				"          {Growth Functional} as string,",
				"          {Growth Functional  %Favorable} as string,",
				"          Career as string,",
				"          {Career  %Favorable} as string,",
				"          {Continuous Improvement Functional} as string,",
				"          {Continuous Improvement Functional  %Favorable} as string,",
				"          {Communication - Manager} as string,",
				"          {Communication - Manager  %Favorable} as string,",
				"          Support as string,",
				"          {Support  %Favorable} as string,",
				"          {Equal Opportunity} as string,",
				"          {Equal Opportunity  %Favorable} as string,",
				"          {Distress - Well-being} as string,",
				"          {Distress - Well-being  %Favorable} as string,",
				"          {Ethics Helpline} as string,",
				"          {Ethics Helpline  %Favorable} as string,",
				"          {Work Life Balance} as string,",
				"          {Work Life Balance  %Favorable} as string,",
				"          Growth as string,",
				"          {Growth  %Favorable} as string,",
				"          Cooperation as string,",
				"          {Cooperation  %Favorable} as string,",
				"          Initiative as string,",
				"          {Initiative  %Favorable} as string,",
				"          {Decision Making} as string,",
				"          {Decision Making  %Favorable} as string,",
				"          {Engagement Index} as string,",
				"          {Engagement Index  %Favorable} as string,",
				"          {Engagement Index > Recommend} as string,",
				"          {Engagement Index > Recommend  %Favorable} as string,",
				"          {Role Clarity} as string,",
				"          {Role Clarity  %Favorable} as string,",
				"          Resources as string,",
				"          {Resources  %Favorable} as string,",
				"          {Engagement Index > eSat} as string,",
				"          {Engagement Index > eSat  %Favorable} as string,",
				"          Belonging as string,",
				"          {Belonging  %Favorable} as string,",
				"          Prospects as string,",
				"          {Prospects  %Favorable} as string,",
				"          {Purpose Contribution} as string,",
				"          {Purpose Contribution  %Favorable} as string,",
				"          {Inclusion - Team} as string,",
				"          {Inclusion - Team  %Favorable} as string,",
				"          {Job Feedback} as string,",
				"          {Job Feedback  %Favorable} as string,",
				"          {Consumer Focus - Culture} as string,",
				"          {Consumer Focus - Culture  %Favorable} as string,",
				"          {Non-Discrimination} as string,",
				"          {Non-Discrimination  %Favorable} as string,",
				"          {Code of Conduct} as string,",
				"          {Code of Conduct  %Favorable} as string,",
				"          {Health & Safety} as string,",
				"          {Health & Safety  %Favorable} as string,",
				"          {Continuous Improvement} as string,",
				"          {Continuous Improvement  %Favorable} as string,",
				"          Empowerment as string,",
				"          {Empowerment  %Favorable} as string,",
				"          Environment as string,",
				"          {Environment  %Favorable} as string,",
				"          Purpose as string,",
				"          {Purpose  %Favorable} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceleaves",
				"source(output(",
				"          Id as long,",
				"          user_id as string,",
				"          division as string,",
				"          job_family as string,",
				"          functional_area as string,",
				"          user_guid as string,",
				"          as_of_date as date,",
				"          as_of_year as integer,",
				"          user_name as string,",
				"          full_name as string,",
				"          user_email as string,",
				"          user_type as string,",
				"          user_subtype as string,",
				"          employment_status as string,",
				"          reason_for_leaving as string,",
				"          termination_type as string,",
				"          termination_reason as string,",
				"          termination_date as date,",
				"          termination_year as integer,",
				"          manager_full_name as string,",
				"          original_hire_date as date,",
				"          last_hire_date as date,",
				"          cost_centre as string,",
				"          location as string,",
				"          country_of_payroll as string,",
				"          payroll_id as string,",
				"          electrolux_legal_entity as string,",
				"          organizational_area as string,",
				"          region as string,",
				"          tier_level as integer,",
				"          anchor_job as string,",
				"          individual_ipe as integer,",
				"          job_level_sub_band as string,",
				"          job_level_band as string,",
				"          salary_structure as string,",
				"          operational_hrbp as string,",
				"          functional_hrbp as string,",
				"          functional_manager_name as string,",
				"          total_rewards as string,",
				"          compensation_manager as string,",
				"          employee_nationality as string,",
				"          is_line_manager as string,",
				"          is_expat as string,",
				"          is_hrbp as string,",
				"          compensation_currency_code as string,",
				"          annual_base_salary as string,",
				"          variable_pay_midpoint as string,",
				"          variable_pay_maximum as string,",
				"          current_abs_compa_ratio as string,",
				"          current_ttc_compa_ratio as string,",
				"          cid as string,",
				"          country_of_location as string,",
				"          employee_type as string,",
				"          date_of_birth as timestamp,",
				"          current_allowances as string,",
				"          variable_pay_type as string,",
				"          electrolux_function as string,",
				"          full_time_part_time as string,",
				"          employee_gender as string,",
				"          employee_class as string,",
				"          job_title as string,",
				"          work_time_capacity as string,",
				"          variable_pay_target_amount as string,",
				"          user_status as string,",
				"          user_id_technical as integer,",
				"          functional_area_id as integer,",
				"          functional_area_ref as string,",
				"          job_family_id as integer,",
				"          job_family_ref as string,",
				"          division_ref as string,",
				"          division_id as integer,",
				"          manager_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [Id]\\n      ,[user_id]\\n      ,[division]\\n      ,[job_family]\\n      ,[functional_area]\\n      ,[user_guid]\\n      ,[as_of_date]\\n      ,[as_of_year]\\n      ,[user_name]\\n      ,[full_name]\\n      ,[user_email]\\n      ,[user_type]\\n      ,[user_subtype]\\n      ,[employment_status]\\n      ,[reason_for_leaving]\\n      ,[termination_type]\\n      ,[termination_reason]\\n      ,[termination_date]\\n      ,[termination_year]\\n      ,[manager_full_name]\\n      ,[original_hire_date]\\n      ,[last_hire_date]\\n      ,[cost_centre]\\n      ,[location]\\n      ,[country_of_payroll]\\n      ,[payroll_id]\\n      ,[electrolux_legal_entity]\\n      ,[organizational_area]\\n      ,[region]\\n      ,[tier_level]\\n      ,[anchor_job]\\n      ,[individual_ipe]\\n      ,[job_level_sub_band]\\n      ,[job_level_band]\\n      ,[salary_structure]\\n      ,[operational_hrbp]\\n      ,[functional_hrbp]\\n      ,[functional_manager_name]\\n      ,[total_rewards]\\n      ,[compensation_manager]\\n      ,[employee_nationality]\\n      ,[is_line_manager]\\n      ,[is_expat]\\n      ,[is_hrbp]\\n      ,[compensation_currency_code]\\n      ,[annual_base_salary]\\n      ,[variable_pay_midpoint]\\n      ,[variable_pay_maximum]\\n      ,[current_abs_compa_ratio]\\n      ,[current_ttc_compa_ratio]\\n      ,[cid]\\n      ,[country_of_location]\\n      ,[employee_type]\\n      ,[date_of_birth]\\n      ,[current_allowances]\\n      ,[variable_pay_type]\\n      ,[electrolux_function]\\n      ,[full_time_part_time]\\n      ,[employee_gender]\\n      ,[employee_class]\\n      ,[job_title]\\n      ,[work_time_capacity]\\n      ,[variable_pay_target_amount]\\n      ,[user_status]\\n      ,[user_id_technical]\\n      ,[functional_area_id]\\n      ,[functional_area_ref]\\n      ,[job_family_id]\\n      ,[job_family_ref]\\n      ,[division_ref]\\n      ,[division_id]\\n      ,[manager_id]\\n  FROM [datatransformation].[HistoricalSnapshot]',",
				"     format: 'query') ~> sourcesqlHistsnapshot",
				"source(output(",
				"          Id as long,",
				"          CreatedBy as string,",
				"          CreatedAt as string,",
				"          UpdatedBy as string,",
				"          UpdatedAt as string,",
				"          UniqueId as string,",
				"          task_user_user_id as integer,",
				"          task_user_task_id as integer,",
				"          task_user_completion_dt as string,",
				"          task_user_expiration_dt as string,",
				"          task_start_dt as string,",
				"          task_end_dt as string,",
				"          task_user_start_dt as string,",
				"          task_name as string,",
				"          task_user_rating as decimal(18,2),",
				"          task_user_rating_text as string,",
				"          task_user_override as decimal(18,2),",
				"          task_user_override_text as string,",
				"          task_user_status_id as integer,",
				"          task_user_status as string,",
				"          task_user_is_active as integer,",
				"          task_active_flag as boolean,",
				"          task_user_recurrance as integer,",
				"          task_user_title as string,",
				"          task_user_rating_adjusted as decimal(18,2),",
				"          task_user_override_adjusted as decimal(18,2),",
				"          user_id as integer,",
				"          task_user_id as integer,",
				"          warehouse_performance_custom_fields_task_id as integer,",
				"          warehouse_performance_custom_fields_user_id as integer,",
				"          warehouse_performance_custom_fields_reccurance as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [Id]\\n      ,[CreatedBy]\\n      ,[CreatedAt]\\n      ,[UpdatedBy]\\n      ,[UpdatedAt]\\n      ,[UniqueId]\\n      ,[task_user_user_id]\\n      ,[task_user_task_id]\\n      ,[task_user_completion_dt]\\n      ,[task_user_expiration_dt]\\n      ,[task_start_dt]\\n      ,[task_end_dt]\\n      ,[task_user_start_dt]\\n      ,[task_name]\\n      ,[task_user_rating]\\n      ,[task_user_rating_text]\\n      ,[task_user_override]\\n      ,[task_user_override_text]\\n      ,[task_user_status_id]\\n      ,[task_user_status]\\n      ,[task_user_is_active]\\n      ,[task_active_flag]\\n      ,[task_user_recurrance]\\n      ,[task_user_title]\\n      ,[task_user_rating_adjusted]\\n      ,[task_user_override_adjusted]\\n      ,[user_id]\\n      ,[task_user_id]\\n      ,[warehouse_performance_custom_fields_task_id]\\n      ,[warehouse_performance_custom_fields_user_id]\\n      ,[warehouse_performance_custom_fields_reccurance]\\n  FROM [reporting].[vw_rpt_performance_review]',",
				"     format: 'query') ~> sourcesqlperfreview",
				"source(output(",
				"          Id as long,",
				"          CreatedBy as string,",
				"          CreatedAt as string,",
				"          UpdatedBy as string,",
				"          UpdatedAt as string,",
				"          UniqueId as string,",
				"          warehouse_smp_custom_fields_user_id as integer,",
				"          warehouse_smp_custom_fields_task_id as integer,",
				"          smp_custom_field_01853 as string,",
				"          smp_custom_field_01883 as string,",
				"          smp_custom_field_01864 as string,",
				"          smp_custom_field_01874 as double,",
				"          smp_custom_field_03264 as boolean,",
				"          smp_custom_field_01834 as double,",
				"          smp_custom_field_02156_raw as string,",
				"          smp_custom_field_01804 as string,",
				"          smp_custom_field_03284 as string,",
				"          smp_custom_field_01814 as double,",
				"          smp_custom_field_03346 as string,",
				"          smp_custom_field_01793 as string,",
				"          smp_custom_field_03294 as string,",
				"          smp_custom_field_02133 as string,",
				"          smp_custom_field_01824 as string,",
				"          smp_custom_field_03254 as string,",
				"          smp_custom_field_03303 as string,",
				"          smp_custom_field_03346_raw as string,",
				"          smp_custom_field_02156 as string,",
				"          smp_custom_field_03314 as string,",
				"          smp_custom_field_01843 as string,",
				"          smp_custom_field_02143 as string,",
				"          smp_custom_field_03363 as string,",
				"          smp_custom_field_03274 as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [Id]\\n      ,[CreatedBy]\\n      ,[CreatedAt]\\n      ,[UpdatedBy]\\n      ,[UpdatedAt]\\n      ,[UniqueId]\\n      ,[warehouse_smp_custom_fields_user_id]\\n      ,[warehouse_smp_custom_fields_task_id]\\n      ,[smp_custom_field_01853]\\n      ,[smp_custom_field_01883]\\n      ,[smp_custom_field_01864]\\n      ,[smp_custom_field_01874]\\n      ,[smp_custom_field_03264]\\n      ,[smp_custom_field_01834]\\n      ,[smp_custom_field_02156_raw]\\n      ,[smp_custom_field_01804]\\n      ,[smp_custom_field_03284]\\n      ,[smp_custom_field_01814]\\n      ,[smp_custom_field_03346]\\n      ,[smp_custom_field_01793]\\n      ,[smp_custom_field_03294]\\n      ,[smp_custom_field_02133]\\n      ,[smp_custom_field_01824]\\n      ,[smp_custom_field_03254]\\n      ,[smp_custom_field_03303]\\n      ,[smp_custom_field_03346_raw]\\n      ,[smp_custom_field_02156]\\n      ,[smp_custom_field_03314]\\n      ,[smp_custom_field_01843]\\n      ,[smp_custom_field_02143]\\n      ,[smp_custom_field_03363]\\n      ,[smp_custom_field_03274]\\n  FROM [reporting].[vw_rpt_succession_incumbent_smp_cf]',",
				"     format: 'query') ~> sourcesqlrptsucession",
				"source(output(",
				"          Id as long,",
				"          CreatedBy as string,",
				"          CreatedAt as string,",
				"          UpdatedBy as string,",
				"          UpdatedAt as string,",
				"          UniqueId as string,",
				"          {_last_touched_dt_utc} as string,",
				"          devplan_id as integer,",
				"          approve_dt as timestamp,",
				"          approver_id as integer,",
				"          assigned_user_id as integer,",
				"          category_id as integer,",
				"          devplan_created_by as integer,",
				"          devplan_created_dt as timestamp,",
				"          description as string,",
				"          due_dt as timestamp,",
				"          is_primary as boolean,",
				"          modified_by as integer,",
				"          modified_dt as timestamp,",
				"          progress as integer,",
				"          status_id as integer,",
				"          template_id as integer,",
				"          template_version as integer,",
				"          title as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: '/****** Script for SelectTopNRows command from SSMS  ******/\\nSELECT [Id]\\n      ,[CreatedBy]\\n      ,[CreatedAt]\\n      ,[UpdatedBy]\\n      ,[UpdatedAt]\\n      ,[UniqueId]\\n      ,[_last_touched_dt_utc]\\n      ,[devplan_id]\\n      ,[approve_dt]\\n      ,[approver_id]\\n      ,[assigned_user_id]\\n      ,[category_id]\\n      ,[devplan_created_by]\\n      ,[devplan_created_dt]\\n      ,[description]\\n      ,[due_dt]\\n      ,[is_primary]\\n      ,[modified_by]\\n      ,[modified_dt]\\n      ,[progress]\\n      ,[status_id]\\n      ,[template_id]\\n      ,[template_version]\\n      ,[title]\\n  FROM [dataexporter].[devplan_core]',",
				"     format: 'query') ~> sourcesqldevplancore",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> sourcesqldev",
				"source(output(",
				"          Id as long,",
				"          CreatedBy as string,",
				"          CreatedAt as string,",
				"          UpdatedBy as string,",
				"          UpdatedAt as string,",
				"          UniqueId as string,",
				"          {_last_touched_dt_utc} as string,",
				"          reg_num as integer,",
				"          user_lo_status_id as long,",
				"          user_lo_score as integer,",
				"          user_lo_create_dt as string,",
				"          user_lo_reg_dt as string,",
				"          user_lo_start_dt as string,",
				"          user_lo_comp_dt as string,",
				"          user_lo_last_access_dt as string,",
				"          user_lo_minutes_participated as integer,",
				"          user_lo_num_attempts as integer,",
				"          user_lo_assignor_id as integer,",
				"          user_lo_assignor_ref as string,",
				"          user_lo_assignor as string,",
				"          user_lo_comment as string,",
				"          user_lo_min_due_date as string,",
				"          is_removed as boolean,",
				"          user_lo_removed_reason_id as integer,",
				"          user_lo_removed_comments as string,",
				"          user_lo_removed_dt as string,",
				"          completed_sco as integer,",
				"          archived as boolean,",
				"          user_lo_assigned_comments as string,",
				"          user_lo_assigned_dt as string,",
				"          training_purpose as integer,",
				"          training_purpose_category as integer,",
				"          user_lo_last_action_dt as string,",
				"          user_lo_pct_complete as decimal(18,2),",
				"          exemptor_id as integer,",
				"          exempt_comment as string,",
				"          approver_exempt_comment as string,",
				"          exempt_dt as string,",
				"          exempt_reason_id as integer,",
				"          exempt_approver_reason_id as integer,",
				"          exempt_reason as string,",
				"          exempt_approver_reason as string,",
				"          is_assigned as boolean,",
				"          is_suggested as boolean,",
				"          is_required as boolean,",
				"          is_latest_reg_num as integer,",
				"          is_archive as integer,",
				"          user_lo_pass as boolean,",
				"          user_lo_cancellation_reason_id as integer,",
				"          user_lo_cancellation_reason as string,",
				"          user_lo_withdrawal_reason_id as integer,",
				"          user_lo_withdrawal_reason as string,",
				"          user_lo_from_training_plan as string,",
				"          user_lo_available_dt as string,",
				"          user_lo_training_link_expiration_date as string,",
				"          user_lo_timezone_code as string,",
				"          user_lo_withdrawal_date as string,",
				"          transcript_badge_id as integer,",
				"          transcript_badge_points as integer,",
				"          transcript_training_points as integer,",
				"          transc_user_id as integer,",
				"          transc_object_id as string,",
				"          user_lo_status_group_id as integer,",
				"          is_latest_version_on_transcript as boolean,",
				"          user_lo_last_modified_dt as string,",
				"          is_express_class as boolean,",
				"          user_lo_equivalent_object_id as string,",
				"          user_lo_equivalency_type as integer,",
				"          user_lo_delivery_method_id as integer,",
				"          is_standalone as boolean,",
				"          user_lo_remover_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [Id]\\n      ,[CreatedBy]\\n      ,[CreatedAt]\\n      ,[UpdatedBy]\\n      ,[UpdatedAt]\\n      ,[UniqueId]\\n      ,[_last_touched_dt_utc]\\n      ,[reg_num]\\n      ,[user_lo_status_id]\\n      ,[user_lo_score]\\n      ,[user_lo_create_dt]\\n      ,[user_lo_reg_dt]\\n      ,[user_lo_start_dt]\\n      ,[user_lo_comp_dt]\\n      ,[user_lo_last_access_dt]\\n      ,[user_lo_minutes_participated]\\n      ,[user_lo_num_attempts]\\n      ,[user_lo_assignor_id]\\n      ,[user_lo_assignor_ref]\\n      ,[user_lo_assignor]\\n      ,[user_lo_comment]\\n      ,[user_lo_min_due_date]\\n      ,[is_removed]\\n      ,[user_lo_removed_reason_id]\\n      ,[user_lo_removed_comments]\\n      ,[user_lo_removed_dt]\\n      ,[completed_sco]\\n      ,[archived]\\n      ,[user_lo_assigned_comments]\\n      ,[user_lo_assigned_dt]\\n      ,[training_purpose]\\n      ,[training_purpose_category]\\n      ,[user_lo_last_action_dt]\\n      ,[user_lo_pct_complete]\\n      ,[exemptor_id]\\n      ,[exempt_comment]\\n      ,[approver_exempt_comment]\\n      ,[exempt_dt]\\n      ,[exempt_reason_id]\\n      ,[exempt_approver_reason_id]\\n      ,[exempt_reason]\\n      ,[exempt_approver_reason]\\n      ,[is_assigned]\\n      ,[is_suggested]\\n      ,[is_required]\\n      ,[is_latest_reg_num]\\n      ,[is_archive]\\n      ,[user_lo_pass]\\n      ,[user_lo_cancellation_reason_id]\\n      ,[user_lo_cancellation_reason]\\n      ,[user_lo_withdrawal_reason_id]\\n      ,[user_lo_withdrawal_reason]\\n      ,[user_lo_from_training_plan]\\n      ,[user_lo_available_dt]\\n      ,[user_lo_training_link_expiration_date]\\n      ,[user_lo_timezone_code]\\n      ,[user_lo_withdrawal_date]\\n      ,[transcript_badge_id]\\n      ,[transcript_badge_points]\\n      ,[transcript_training_points]\\n      ,[transc_user_id]\\n      ,[transc_object_id]\\n      ,[user_lo_status_group_id]\\n      ,[is_latest_version_on_transcript]\\n      ,[user_lo_last_modified_dt]\\n      ,[is_express_class]\\n      ,[user_lo_equivalent_object_id]\\n      ,[user_lo_equivalency_type]\\n      ,[user_lo_delivery_method_id]\\n      ,[is_standalone]\\n      ,[user_lo_remover_id]\\n  FROM [reporting].[vw_rpt_transcript]',",
				"     format: 'query') ~> sourcesqlrpttranscript",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [Id]\\n      ,[CreatedBy]\\n      ,[CreatedAt]\\n      ,[UpdatedBy]\\n      ,[UpdatedAt]\\n      ,[UniqueId]\\n      ,[_last_touched_dt_utc]\\n      ,[warehouse_user_custom_fields_user_id]\\n      ,[user_cf_user_id]\\n      ,[job_title]\\n      ,[birth_date]\\n      ,[is_expat]\\n      ,[employee_gender_id]\\n      ,[full_time_part_time_id]\\n      ,[work_time_capacity_persentage]\\n      ,[employee_type_id]\\n      ,[employee_class_id]\\n      ,[ees_survey_language]\\n      ,[ees_report_owner]\\n      ,[current_abs_compa_ratio]\\n      ,[functional_manager]\\n      ,[hrbp_id]\\n      ,[is_hrbp]\\n      ,[current_ttc_compa_ratio]\\n      ,[eligible_for_merit_increase]\\n      ,[employment_category]\\n      ,[current_local_allowances]\\n      ,[mandatory_increase_persentage]\\n      ,[ttc_mid]\\n      ,[variable_pay_maximum_persentage]\\n      ,[variable_pay_midpoint_persentage]\\n      ,[variable_pay_type_id]\\n      ,[cid]\\n      ,[consent_confirmation]\\n      ,[is_consent_withdrawn]\\n      ,[consent_withdrawn_date]\\n      ,[ees_leadership_index]\\n      ,[is_line_manager]\\n      ,[current_lti_maximum]\\n      ,[current_tdc_compa_ratio]\\n      ,[country_budget]\\n      ,[current_allowances]\\n      ,[previous_salary_review_increase]\\n      ,[second_actual_abs]\\n      ,[sti_period]\\n      ,[second_sti_period]\\n      ,[sti_scorecard_name]\\n      ,[second_sti_scorecard_name]\\n      ,[sti_mid_persentage]\\n      ,[second_sti_mid_persentage]\\n      ,[sti_max_persentage]\\n      ,[second_sti_max_persentage]\\n      ,[sti_plan_link]\\n      ,[second_sti_plan_link]\\n      ,[sti_period_payout]\\n      ,[second_sti_period_payout]\\n      ,[sti_scorecard_name_payout]\\n      ,[second_sti_scorecard_name_payout]\\n      ,[sti_mid_persentage_payout]\\n      ,[second_sti_mid_persentage_payout]\\n      ,[sti_max_persentage_payout]\\n      ,[second_sti_max_persentage_payout]\\n      ,[sti_plan_link_payout]\\n      ,[second_sti_plan_link_payout]\\n      ,[actual_abs]\\n      ,[sti_payout]\\n      ,[second_sti_payout]\\n      ,[hr_business_partner]\\n      ,[is_eligible_for_sti]\\n      ,[country_of_location]\\n      ,[operational_hrbp_email]\\n      ,[consent_status_date_apac]\\n      ,[home_cost_center]\\n      ,[compensation_currency_code_id]\\n      ,[pay_range]\\n      ,[international_assignment_type_id]\\n      ,[performance_rating]\\n      ,[qlik_sense_access_sector]\\n      ,[qlik_sense_access_region]\\n      ,[payroll_id]\\n      ,[sap_id]\\n      ,[variable_pay_target_amount]\\n      ,[annual_base_salary]\\n      ,[is_qlik_sense_access]\\n      ,[internal_identifier]\\n      ,[welcome_page_sti_scorecard_link]\\n      ,[welcome_page_sti_mid]\\n      ,[welcome_page_sti_max]\\n      ,[compensation_statement_2020]\\n      ,[new_abs_effective_date_2020]\\n      ,[final_salary_abs_2020]\\n      ,[final_salary_mbs_2020]\\n      ,[latest_annual_salary_review_task]\\n      ,[salary_review_letter_signing_manager]\\n      ,[is_people_form_portal_maintenance]\\n      ,[employee_nationality_id]\\n      ,[employee_ethnicity_id]\\n      ,[it_onboarding_admin_user_name]\\n      ,[is_international_line_manager]\\n      ,[applicant_input_on_current_employment]\\n      ,[applicant_input_on_previous_employment]\\n      ,[previous_record_user_internal_identifier]\\n      ,[it_offboarding_last_day_of_work]\\n      ,[it_onboarding_joiner_type]\\n      ,[it_onboarding_rehire_biz_id]\\n      ,[personal_identification_number]\\n      ,[kiosk_survey_code]\\n  FROM [reporting].[vw_rpt_user_cf]',",
				"     format: 'query') ~> sourcesqlrptusercf",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [Id]\\n      ,[CreatedBy]\\n      ,[CreatedAt]\\n      ,[UpdatedBy]\\n      ,[UpdatedAt]\\n      ,[FormTitle]\\n      ,[ResponseId]\\n      ,[RespondersEmail]\\n      ,[SubmissionTime]\\n      ,[QuestionTitle]\\n      ,[QuestionId]\\n      ,[Answer]\\n  FROM [dbo].[SurveyResponse]',",
				"     format: 'query') ~> sourcesqlsurveyresponse"
			]
		}
	}
}